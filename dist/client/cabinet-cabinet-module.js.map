{"version":3,"sources":["webpack:///./src/app/cabinet/cabinet-routing.module.ts","webpack:///./src/app/cabinet/cabinet.component.html","webpack:///./src/app/cabinet/cabinet.component.scss","webpack:///./src/app/cabinet/cabinet.component.ts","webpack:///./src/app/cabinet/cabinet.module.ts","webpack:///./src/app/cabinet/cabinet.service.ts","webpack:///./src/app/cabinet/components/header/header.component.html","webpack:///./src/app/cabinet/components/header/header.component.scss","webpack:///./src/app/cabinet/components/header/header.component.ts","webpack:///./src/app/cabinet/components/menu/menu.component.html","webpack:///./src/app/cabinet/components/menu/menu.component.scss","webpack:///./src/app/cabinet/components/menu/menu.component.ts","webpack:///./src/app/cabinet/my-computers/my-computers.component.html","webpack:///./src/app/cabinet/my-computers/my-computers.component.scss","webpack:///./src/app/cabinet/my-computers/my-computers.component.ts","webpack:///./src/app/cabinet/new-computer/new-computer.component.html","webpack:///./src/app/cabinet/new-computer/new-computer.component.scss","webpack:///./src/app/cabinet/new-computer/new-computer.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AACF;AACsB;AACA;AAE3E,IAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAG,SAAS,EAAE,mEAAgB,EAAE,QAAQ,EAAE;YAChD,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,cAAc,EAAE,SAAS,EAAE,MAAM,EAAC;YACzD,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,yFAAoB,EAAC;YACvD,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,yFAAoB,EAAE,SAAS,EAAE,MAAM,EAAC;SAC7E,EAAC;CACL,CAAC;AAMF;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QAJhC,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;AClBjC,yK;;;;;;;;;;;ACAA,4BAA4B,sBAAsB,8BAA8B,qBAAqB,EAAE,yBAAyB,wBAAwB,EAAE,+CAA+C,mjB;;;;;;;;;;;;;;;;;;;;;;;;ACAvJ;AAOlD;IAEE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IALU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;;OACW,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPU;AACM;AACQ;AACS;AACS;AACM;AACA;AACZ;AACnB;AAU9C;IAAA;IACA,CAAC;IADY,aAAa;QARzB,8DAAQ,CAAC;YACN,YAAY,EAAE,CAAC,mEAAgB,EAAE,mFAAe,EAAE,yFAAoB,EAAE,yFAAoB,EAAE,6EAAa,CAAC;YAC5G,OAAO,EAAE;gBACL,4DAAY;gBACZ,4EAAoB;gBACpB,2DAAY;aACf;SACJ,CAAC;OACW,aAAa,CACzB;IAAD,oBAAC;CAAA;AADyB;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBe;AACO;AACW;AAM3D;IAEI,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,4CAAmB,GAAnB;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,UAAO,CAAC,CAAC;IACpD,CAAC;IAED,yCAAgB,GAAhB,UAAiB,IAAI;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,uBAAoB,EAAE,IAAI,CAAC,CAAC;IACxE,CAAC;IAED,yCAAgB,GAAhB;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,GAAG,yBAAsB,CAAC,CAAC;IACnE,CAAC;IAED,uCAAc,GAAd,UAAe,EAAE;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,GAAG,uBAAoB,EAAE,EAAC,EAAE,MAAC,CAAC,CAAC;IACxE,CAAC;IAnBQ,cAAc;QAH1B,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;yCAG4B,+DAAU;OAF3B,cAAc,CAoB1B;IAAD,qBAAC;CAAA;AApB0B;;;;;;;;;;;;ACR3B,4M;;;;;;;;;;;ACAA,2BAA2B,kBAAkB,2BAA2B,qBAAqB,8BAA8B,kCAAkC,EAAE,WAAW,iBAAiB,iBAAiB,2BAA2B,EAAE,+CAA+C,2wB;;;;;;;;;;;;;;;;;;;;;;;;ACAtO;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,4T;;;;;;;;;;;ACAA,gCAAgC,gBAAgB,sCAAsC,EAAE,yBAAyB,iDAAiD,EAAE,+CAA+C,umB;;;;;;;;;;;;;;;;;;;;;;;;ACAjK;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,2iBAA2iB,cAAc,4OAA4O,sBAAsB,GAAG,yBAAyB,0OAA0O,sBAAsB,kOAAkO,iBAAiB,geAAge,2BAA2B,uF;;;;;;;;;;;ACAr0D,iCAAiC,qBAAqB,EAAE,4BAA4B,0BAA0B,EAAE,0BAA0B,yBAAyB,EAAE,+CAA+C,2lB;;;;;;;;;;;;;;;;;;;;;;;;;;ACApK;AAC+B;AAC7B;AAclD;IAKI,8BAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAHjD,qBAAgB,GAAa,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QAIvE,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,uCAAQ,GAAR;IACA,CAAC;IAED,2CAAY,GAAZ;QAAA,iBAKC;QAJG,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,cAAI;YACjD,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAc,GAAd,UAAe,EAAE;QAAjB,iBAIC;QAHG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;YAC7C,KAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAvBQ,oBAAoB;QAZhC,+DAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;;;YAG5B,UAAU,EAAE;gBACR,mEAAO,CAAC,cAAc,EAAE;oBACpB,iEAAK,CAAC,WAAW,EAAE,iEAAK,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAC,CAAC,CAAC;oBAC3E,iEAAK,CAAC,UAAU,EAAE,iEAAK,CAAC,EAAC,MAAM,EAAE,GAAG,EAAC,CAAC,CAAC;oBACvC,sEAAU,CAAC,wBAAwB,EAAE,mEAAO,CAAC,sCAAsC,CAAC,CAAC;iBACxF,CAAC;aACL;SACJ,CAAC;yCAMqC,+DAAc;OALxC,oBAAoB,CAyBhC;IAAD,2BAAC;CAAA;AAzBgC;;;;;;;;;;;;AChBjC,uvBAAuvB,cAAc,wXAAwX,cAAc,uVAAuV,cAAc,sUAAsU,0BAA0B,6VAA6V,gBAAgB,+UAA+U,aAAa,GAAG,gBAAgB,kVAAkV,aAAa,guC;;;;;;;;;;;ACA34F,0CAA0C,kBAAkB,0CAA0C,mBAAmB,EAAE,4BAA4B,gBAAgB,EAAE,+CAA+C,moB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxK;AACE;AAGI;AAOtD;IAmBI,8BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAhBlD,SAAI,GAAc,IAAI,wDAAS,CAAC;YAC5B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzB,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC3B,mBAAmB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACxC,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC3B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1B,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC9B,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC5B,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvB,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACnC,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAClC,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC/B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SACtC,CAAC,CAAC;QAGC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,mBAAmB,EAAE,CAAC;IACnE,CAAC;IAED,uCAAQ,GAAR;IACA,CAAC;IAED,qCAAM,GAAN;QACI,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IAC7F,CAAC;IA5BQ,oBAAoB;QALhC,+DAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;;;SAG/B,CAAC;yCAoBsC,+DAAc;OAnBzC,oBAAoB,CA8BhC;IAAD,2BAAC;CAAA;AA9BgC","file":"cabinet-cabinet-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {CabinetComponent} from './cabinet.component';\nimport {MyComputersComponent} from './my-computers/my-computers.component';\nimport {NewComputerComponent} from './new-computer/new-computer.component';\n\nconst routes: Routes = [\n    { path: '',  component: CabinetComponent, children: [\n        {path: '', redirectTo: 'my-computers', pathMatch: 'full'},\n        {path: 'my-computers', component: MyComputersComponent},\n        {path: 'new-computer', component: NewComputerComponent, pathMatch: 'full'},\n    ]}\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class CabinetRoutingModule { }\n","module.exports = \"<main class=\\\"cabinet\\\">\\n    <app-header></app-header>\\n    <div class=\\\"container\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</main>\\n\"","module.exports = \".cabinet {\\n  min-height: 100vh;\\n  background-color: #7c4dff;\\n  overflow: hidden; }\\n  .cabinet .container {\\n    margin: 20px auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2tpemlsb3YvUGhwc3Rvcm1Qcm9qZWN0cy9jaHJvbWVFeHQvY2xpZW50L3NyYy9hcHAvY2FiaW5ldC9jYWJpbmV0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWlCO0VBQ2pCLDBCQUF5QjtFQUN6QixpQkFBZ0IsRUFJakI7RUFQRDtJQUtJLGtCQUFpQixFQUNsQiIsImZpbGUiOiJzcmMvYXBwL2NhYmluZXQvY2FiaW5ldC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYWJpbmV0IHtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3YzRkZmY7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIC5jb250YWluZXIge1xuICAgIG1hcmdpbjogMjBweCBhdXRvO1xuICB9XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cabinet',\n  templateUrl: './cabinet.component.html',\n  styleUrls: ['./cabinet.component.scss']\n})\nexport class CabinetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CabinetComponent} from './cabinet.component';\nimport {CabinetRoutingModule} from './cabinet-routing.module';\nimport { HeaderComponent } from './components/header/header.component';\nimport { NewComputerComponent } from './new-computer/new-computer.component';\nimport { MyComputersComponent } from './my-computers/my-computers.component';\nimport { MenuComponent } from './components/menu/menu.component';\nimport {SharedModule} from '../shared.module';\n\n@NgModule({\n    declarations: [CabinetComponent, HeaderComponent, NewComputerComponent, MyComputersComponent, MenuComponent],\n    imports: [\n        CommonModule,\n        CabinetRoutingModule,\n        SharedModule\n    ]\n})\nexport class CabinetModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CabinetService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    getAllComputersInfo(): Observable<any> {\n        return this.http.get(`${environment.url}/site`);\n    }\n\n    saveComputerInfo(data) {\n        return this.http.post(`${environment.url}/site/add_computer`, data);\n    }\n\n    getComputersList() {\n        return this.http.get(`${environment.url}/site/computers_list`);\n    }\n\n    removeComputer(id) {\n        return this.http.post(`${environment.url}/site/del_computer`, {id});\n    }\n}\n","module.exports = \"<header class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n  <div class=\\\"logo\\\"></div>\\n  <div class=\\\"menu\\\">\\n    <app-menu></app-menu>\\n  </div>\\n</header>\\n\"","module.exports = \".header {\\n  padding: 10px;\\n  box-sizing: border-box;\\n  min-height: 60px;\\n  background-color: #673ab7;\\n  box-shadow: 1px 1px 10px #333; }\\n\\n.logo {\\n  width: 100px;\\n  height: 40px;\\n  background-color: #fff; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2tpemlsb3YvUGhwc3Rvcm1Qcm9qZWN0cy9jaHJvbWVFeHQvY2xpZW50L3NyYy9hcHAvY2FiaW5ldC9jb21wb25lbnRzL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFhO0VBQ2IsdUJBQXNCO0VBQ3RCLGlCQUFnQjtFQUNoQiwwQkFBeUI7RUFDekIsOEJBQTZCLEVBQzlCOztBQUNEO0VBQ0UsYUFBWTtFQUNaLGFBQVk7RUFDWix1QkFBc0IsRUFDdkIiLCJmaWxlIjoic3JjL2FwcC9jYWJpbmV0L2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkZXIge1xuICBwYWRkaW5nOiAxMHB4O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBtaW4taGVpZ2h0OiA2MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjczYWI3O1xuICBib3gtc2hhZG93OiAxcHggMXB4IDEwcHggIzMzMztcbn1cbi5sb2dvIHtcbiAgd2lkdGg6IDEwMHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"menu\\\">\\n  <button mat-button routerLink=\\\"my-computers\\\" routerLinkActive=\\\"active\\\">Мои компьютеры</button>\\n  <button mat-button routerLink=\\\"new-computer\\\" routerLinkActive=\\\"active\\\">Добавить компьютер</button>\\n  <button mat-button routerLink=\\\"/login\\\">Выйти</button>\\n</div>\\n\"","module.exports = \".menu button {\\n  color: #fff;\\n  font-family: 'Comfortaa', cursive; }\\n  .menu button.active {\\n    background-color: rgba(255, 255, 255, 0.4); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2tpemlsb3YvUGhwc3Rvcm1Qcm9qZWN0cy9jaHJvbWVFeHQvY2xpZW50L3NyYy9hcHAvY2FiaW5ldC9jb21wb25lbnRzL21lbnUvbWVudS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLFlBQVc7RUFDWCxrQ0FBaUMsRUFJbEM7RUFQSDtJQUtNLDJDQUEwQyxFQUMzQyIsImZpbGUiOiJzcmMvYXBwL2NhYmluZXQvY29tcG9uZW50cy9tZW51L21lbnUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWVudSB7XG4gIGJ1dHRvbiB7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC1mYW1pbHk6ICdDb21mb3J0YWEnLCBjdXJzaXZlO1xuICAgICYuYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsICAyNTUsIC40KTtcbiAgICB9XG4gIH1cbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"my-computers\\\">\\n    <mat-card class=\\\"full-width\\\">\\n        <mat-card-header>\\n            <mat-card-title>Мои компьютеры</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"my-computers__table\\\">\\n            <table mat-table [dataSource]=\\\"computersList\\\" class=\\\"full-width\\\" *ngIf=\\\"computersList\\\">\\n\\n                <ng-container matColumnDef=\\\"name\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Name</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"browser\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Browser</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.browser.name}} {{element.browser.version}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"screen\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Screen</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.screen.label}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"os\\\">\\n                    <th mat-header-cell *matHeaderCellDef>OS</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.os.name}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"delete\\\">\\n                    <th mat-header-cell *matHeaderCellDef></th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" width=\\\"50px\\\"><button mat-button (click)=\\\"removeComputer(element._id)\\\">x</button></td>\\n                </ng-container>\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n            </table>\\n        </mat-card-content>\\n    </mat-card>\\n</div>\\n\"","module.exports = \".my-computers {\\n  overflow: hidden; }\\n  .my-computers tr:hover {\\n    background: #f5f5f5; }\\n  .my-computers__table {\\n    overflow-y: hidden; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2tpemlsb3YvUGhwc3Rvcm1Qcm9qZWN0cy9jaHJvbWVFeHQvY2xpZW50L3NyYy9hcHAvY2FiaW5ldC9teS1jb21wdXRlcnMvbXktY29tcHV0ZXJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWdCLEVBT2pCO0VBUkQ7SUFHSSxvQkFBbUIsRUFDcEI7RUFDRDtJQUNFLG1CQUFrQixFQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NhYmluZXQvbXktY29tcHV0ZXJzL215LWNvbXB1dGVycy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5teS1jb21wdXRlcnMge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0cjpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcbiAgfVxuICAmX190YWJsZSB7XG4gICAgb3ZlcmZsb3cteTogaGlkZGVuO1xuICB9XG59XG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {CabinetService} from '../cabinet.service';\n\n@Component({\n    selector: 'app-my-computers',\n    templateUrl: './my-computers.component.html',\n    styleUrls: ['./my-computers.component.scss'],\n    animations: [\n        trigger('detailExpand', [\n            state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n            state('expanded', style({height: '*'})),\n            transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n        ]),\n    ],\n})\nexport class MyComputersComponent implements OnInit {\n\n    displayedColumns: string[] = ['name', 'browser', 'screen', 'os', 'delete'];\n    computersList;\n\n    constructor(public cabinetService: CabinetService) {\n        this.getComputers();\n    }\n\n    ngOnInit() {\n    }\n\n    getComputers() {\n        this.cabinetService.getComputersList().subscribe(data => {\n            this.computersList = data;\n            console.log(this.computersList);\n        });\n    }\n\n    removeComputer(id) {\n        this.cabinetService.removeComputer(id).subscribe(() => {\n            this.getComputers();\n        });\n    }\n\n}\n","module.exports = \"<div class=\\\"new-computer\\\">\\n  <form (ngSubmit)=\\\"submit()\\\" [formGroup]=\\\"form\\\">\\n    <mat-card class=\\\"full-width\\\">\\n      <mat-card-header>\\n        <mat-card-title>Создание Компьютера</mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content class=\\\"new-computer__options\\\">\\n          <mat-form-field class=\\\"new-computer__control\\\">\\n              <input matInput placeholder=\\\"Имя компьютера\\\" formControlName=\\\"name\\\">\\n          </mat-form-field>\\n          <mat-form-field class=\\\"new-computer__control\\\">\\n            <mat-label>Разрешение экрана</mat-label>\\n            <mat-select formControlName=\\\"screen\\\">\\n              <mat-option [value]=\\\"item._id\\\" *ngFor=\\\"let item of (computersInfo | async)?.screen\\\">{{ item.label }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"new-computer__control\\\">\\n            <mat-label>Количество потоков (ядер)</mat-label>\\n            <mat-select formControlName=\\\"hardwareConcurrency\\\">\\n              <mat-option [value]=\\\"item._id\\\" *ngFor=\\\"let item of (computersInfo | async)?.hardwareConcurrency\\\">{{ item.value }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"new-computer__control\\\">\\n            <mat-label>Оперативная память</mat-label>\\n            <mat-select formControlName=\\\"memory\\\">\\n              <mat-option [value]=\\\"item._id\\\" *ngFor=\\\"let item of (computersInfo | async)?.memory\\\">{{ item.value }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"new-computer__control\\\">\\n            <mat-label>GPU</mat-label>\\n            <mat-select formControlName=\\\"webgl\\\">\\n              <mat-option [value]=\\\"item._id\\\" *ngFor=\\\"let item of (computersInfo | async)?.webgl\\\">{{ item.unmasked_renderer }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"new-computer__control\\\">\\n            <mat-label>Languages</mat-label>\\n            <mat-select multiple formControlName=\\\"languages\\\">\\n              <mat-option [value]=\\\"item._id\\\" *ngFor=\\\"let item of (computersInfo | async)?.languages\\\">{{ item.dialect }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"new-computer__control\\\">\\n            <mat-label>Браузер</mat-label>\\n            <mat-select formControlName=\\\"browser\\\">\\n              <mat-option [value]=\\\"item._id\\\" *ngFor=\\\"let item of (computersInfo | async)?.browsers\\\">{{ item.name }} {{ item.version }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"new-computer__control\\\">\\n            <mat-label>Операционная систеема</mat-label>\\n            <mat-select formControlName=\\\"os\\\">\\n              <mat-option [value]=\\\"item._id\\\" *ngFor=\\\"let item of (computersInfo | async)?.os\\\">{{ item.name }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <div class=\\\"form_field_wrap\\\">\\n            <h3>Proxy</h3>\\n            <mat-form-field style=\\\"width: 25%\\\" >\\n              <input matInput placeholder=\\\"Protocol\\\" formControlName=\\\"proxy_protocol\\\">\\n            </mat-form-field>\\n            <mat-form-field style=\\\"width: 50%\\\">\\n              <input matInput placeholder=\\\"Proxy address\\\" formControlName=\\\"proxy_address\\\">\\n            </mat-form-field>\\n            <mat-form-field style=\\\"width: 25%\\\">\\n              <input matInput placeholder=\\\"port\\\" type=\\\"number\\\" formControlName=\\\"proxy_port\\\">\\n            </mat-form-field>\\n            <mat-form-field class=\\\"new-computer__control\\\">\\n              <input matInput placeholder=\\\"Login\\\" formControlName=\\\"proxy_login\\\">\\n            </mat-form-field>\\n            <mat-form-field class=\\\"new-computer__control\\\">\\n              <input matInput placeholder=\\\"Password\\\" formControlName=\\\"proxy_password\\\">\\n            </mat-form-field>\\n          </div>\\n      </mat-card-content>\\n      <mat-card-actions>\\n        <button mat-raised-button color=\\\"primary\\\">Сохранить</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </form>\\n</div>\\n\"","module.exports = \".new-computer__options {\\n  display: grid;\\n  grid-template-columns: repeat(2, 1fr);\\n  grid-gap: 20px; }\\n\\n.new-computer__control {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2tpemlsb3YvUGhwc3Rvcm1Qcm9qZWN0cy9jaHJvbWVFeHQvY2xpZW50L3NyYy9hcHAvY2FiaW5ldC9uZXctY29tcHV0ZXIvbmV3LWNvbXB1dGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UsY0FBYTtFQUNiLHNDQUFxQztFQUNyQyxlQUFjLEVBQ2Y7O0FBQ0Q7RUFDRSxZQUFXLEVBQ1oiLCJmaWxlIjoic3JjL2FwcC9jYWJpbmV0L25ldy1jb21wdXRlci9uZXctY29tcHV0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmV3LWNvbXB1dGVyIHtcbiAgJl9fb3B0aW9ucyB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICAgIGdyaWQtZ2FwOiAyMHB4O1xuICB9XG4gICZfX2NvbnRyb2wge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {CabinetService} from '../cabinet.service';\nimport {Observable} from 'rxjs';\nimport {IComputersInfo} from '../../app.interfaces';\nimport {FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n    selector: 'app-new-computer',\n    templateUrl: './new-computer.component.html',\n    styleUrls: ['./new-computer.component.scss']\n})\nexport class NewComputerComponent implements OnInit {\n\n    computersInfo: Observable<IComputersInfo>;\n    form: FormGroup = new FormGroup({\n        name: new FormControl(''),\n        screen: new FormControl(''),\n        hardwareConcurrency: new FormControl(''),\n        memory: new FormControl(''),\n        webgl: new FormControl(''),\n        languages: new FormControl(''),\n        browser: new FormControl(''),\n        os: new FormControl(''),\n        proxy_protocol: new FormControl(''),\n        proxy_address: new FormControl(''),\n        proxy_port: new FormControl(''),\n        proxy_login: new FormControl(''),\n        proxy_password: new FormControl(''),\n    });\n\n    constructor(private cabinetService: CabinetService) {\n        this.computersInfo = this.cabinetService.getAllComputersInfo();\n    }\n\n    ngOnInit() {\n    }\n\n    submit() {\n        this.cabinetService.saveComputerInfo(this.form.value).subscribe(res => console.log(res));\n    }\n\n}\n"],"sourceRoot":""}